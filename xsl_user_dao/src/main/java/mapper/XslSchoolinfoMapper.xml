<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.XslSchoolinfoMapper" >
  <resultMap id="BaseResultMap" type="pojo.XslSchoolinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolid" jdbcType="VARCHAR" />
    <result column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="college" property="college" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="startDate" property="startdate" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="TINYINT" />
    <result column="schoolHours" property="schoolhours" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, schoolId, sno, major, college, school, startDate, degree, schoolHours
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="example.XslSchoolinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xsl_schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xsl_schoolInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xsl_schoolInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="example.XslSchoolinfoExample" >
    delete from xsl_schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.XslSchoolinfo" >
    insert into xsl_schoolInfo (id, schoolId, sno, 
      major, college, school, 
      startDate, degree, schoolHours
      )
    values (#{id,jdbcType=INTEGER}, #{schoolid,jdbcType=VARCHAR}, #{sno,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{startdate,jdbcType=VARCHAR}, #{degree,jdbcType=TINYINT}, #{schoolhours,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.XslSchoolinfo" >
    insert into xsl_schoolInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolid != null" >
        schoolId,
      </if>
      <if test="sno != null" >
        sno,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="schoolhours != null" >
        schoolHours,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=VARCHAR},
      </if>
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=TINYINT},
      </if>
      <if test="schoolhours != null" >
        #{schoolhours,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="example.XslSchoolinfoExample" resultType="java.lang.Integer" >
    select count(*) from xsl_schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xsl_schoolInfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        schoolId = #{record.schoolid,jdbcType=VARCHAR},
      </if>
      <if test="record.sno != null" >
        sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=TINYINT},
      </if>
      <if test="record.schoolhours != null" >
        schoolHours = #{record.schoolhours,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xsl_schoolInfo
    set id = #{record.id,jdbcType=INTEGER},
      schoolId = #{record.schoolid,jdbcType=VARCHAR},
      sno = #{record.sno,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      startDate = #{record.startdate,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=TINYINT},
      schoolHours = #{record.schoolhours,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.XslSchoolinfo" >
    update xsl_schoolInfo
    <set >
      <if test="schoolid != null" >
        schoolId = #{schoolid,jdbcType=VARCHAR},
      </if>
      <if test="sno != null" >
        sno = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=TINYINT},
      </if>
      <if test="schoolhours != null" >
        schoolHours = #{schoolhours,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.XslSchoolinfo" >
    update xsl_schoolInfo
    set schoolId = #{schoolid,jdbcType=VARCHAR},
      sno = #{sno,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      startDate = #{startdate,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=TINYINT},
      schoolHours = #{schoolhours,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>