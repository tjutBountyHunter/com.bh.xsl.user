<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.XslSchoolTaskMapper" >
  <resultMap id="BaseResultMap" type="pojo.XslSchoolTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolid" jdbcType="INTEGER" />
    <result column="taskId" property="taskid" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, schoolId, taskId, createDate, updateDate, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="example.XslSchoolTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xsl_school_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xsl_school_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xsl_school_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="example.XslSchoolTaskExample" >
    delete from xsl_school_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.XslSchoolTask" >
    insert into xsl_school_task (id, schoolId, taskId, 
      createDate, updateDate, state
      )
    values (#{id,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, #{taskid,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}, #{state,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.XslSchoolTask" >
    insert into xsl_school_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolid != null" >
        schoolId,
      </if>
      <if test="taskid != null" >
        taskId,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="example.XslSchoolTaskExample" resultType="java.lang.Integer" >
    select count(*) from xsl_school_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xsl_school_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        schoolId = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null" >
        taskId = #{record.taskid,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedate != null" >
        updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xsl_school_task
    set id = #{record.id,jdbcType=INTEGER},
      schoolId = #{record.schoolid,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.XslSchoolTask" >
    update xsl_school_task
    <set >
      <if test="schoolid != null" >
        schoolId = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        taskId = #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.XslSchoolTask" >
    update xsl_school_task
    set schoolId = #{schoolid,jdbcType=INTEGER},
      taskId = #{taskid,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectTaskIdBySchoolId" resultType="string" parameterType="integer" >
    select
      taskId
    from
      xsl_school_task
    WHERE
       state = "1"
    and
      schoolId = #{schoolid,jdbcType=INTEGER}
    order by updateDate
  </select>

  <select id="selectIdBySchoolId" resultType="integer" parameterType="integer" >
    select
      id
    from
      xsl_school_task
    WHERE
       state = "1"
    and
      schoolId = #{schoolid,jdbcType=INTEGER}
    order by updateDate
  </select>

  <select id="selectTaskIdByGreaterThanId" resultType="java.lang.String" parameterType="integer" >
    select
      id
    from
      xsl_school_task
    WHERE
       state = "1"
    and
      id > #{id,jdbcType=INTEGER}
    order by updateDate
  </select>


  <select id="selectTaskIdByLessThanSchoolId" resultType="java.lang.String" parameterType="integer" >
    select
      id
    from
      xsl_school_task
    WHERE
       state = "1"
    and
       id &lt; #{id,jdbcType=INTEGER}

    order by updateDate
  </select>


</mapper>