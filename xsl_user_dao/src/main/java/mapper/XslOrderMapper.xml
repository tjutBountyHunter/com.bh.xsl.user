<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.XslOrderMapper" >
  <resultMap id="BaseResultMap" type="pojo.XslOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="VARCHAR" />
    <result column="sendId" property="sendid" jdbcType="INTEGER" />
    <result column="taskId" property="taskid" jdbcType="INTEGER" />
    <result column="receiveId" property="receiveid" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="endDate" property="enddate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderId, sendId, taskId, receiveId, money, state, startDate, endDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="example.XslOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xsl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xsl_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xsl_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="example.XslOrderExample" >
    delete from xsl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.XslOrder" >
    insert into xsl_order (id, orderId, sendId, 
      taskId, receiveId, money, 
      state, startDate, endDate
      )
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, #{sendid,jdbcType=INTEGER}, 
      #{taskid,jdbcType=INTEGER}, #{receiveid,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, 
      #{state,jdbcType=TINYINT}, #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.XslOrder" >
    insert into xsl_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="sendid != null" >
        sendId,
      </if>
      <if test="taskid != null" >
        taskId,
      </if>
      <if test="receiveid != null" >
        receiveId,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="enddate != null" >
        endDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="sendid != null" >
        #{sendid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="receiveid != null" >
        #{receiveid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="example.XslOrderExample" resultType="java.lang.Integer" >
    select count(*) from xsl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xsl_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendid != null" >
        sendId = #{record.sendid,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null" >
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.receiveid != null" >
        receiveId = #{record.receiveid,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null" >
        endDate = #{record.enddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xsl_order
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=VARCHAR},
      sendId = #{record.sendid,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=INTEGER},
      receiveId = #{record.receiveid,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=TINYINT},
      startDate = #{record.startdate,jdbcType=DATE},
      endDate = #{record.enddate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.XslOrder" >
    update xsl_order
    <set >
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="sendid != null" >
        sendId = #{sendid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        taskId = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="receiveid != null" >
        receiveId = #{receiveid,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        endDate = #{enddate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.XslOrder" >
    update xsl_order
    set orderId = #{orderid,jdbcType=VARCHAR},
      sendId = #{sendid,jdbcType=INTEGER},
      taskId = #{taskid,jdbcType=INTEGER},
      receiveId = #{receiveid,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      state = #{state,jdbcType=TINYINT},
      startDate = #{startdate,jdbcType=DATE},
      endDate = #{enddate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>